t_debian-12-work_v1
===================
```
basetemplate=debian-12-minimal
worktemplatevm=t_debian-12-work_v1
DownloadAppVM=my-untrusted
WorkAppVM=my-work

# Remove an existing template
if [ -d /var/lib/qubes/vm-templates/$worktemplatevm ];
   then qvm-kill $worktemplatevm;
   qvm-remove --force $worktemplatevm;
fi

# Clone Template
qvm-clone $basetemplate $worktemplatevm

# Conigure locales
qvm-run --auto --user root --pass-io --no-gui $worktemplatevm 'sudo apt-get install dialog'

# Conigure locales
qvm-run --auto --user root --pass-io --no-gui $worktemplate 'dpkg-reconfigure locales'
# install the following locales: 72,97
# 72 = de_DE.UTF-8
# 97 = en_US.UTF-8 <- set this as default !

# Install Updates
qvm-run --auto --user root --pass-io --no-gui $worktemplatevm \
  'apt-get update && apt-get upgrade && apt autoremove'

# Install Basic Applications
qvm-run --auto --user root --pass-io --no-gui $worktemplatevm \
        'apt-get install -y \
                gedit \
                nano \
                curl \
                git wget mc \
                less \
                unzip \
                openssl \
                qubes-gpg-split \
                qubes-core-agent-networking \
                qubes-usb-proxy \
                qubes-core-qrexec \
                notification-daemon \
                qubes-input-proxy-sender \
                zenity '

# Install Applications
qvm-run --auto --user root --pass-io --no-gui $worktemplatevm \
        'apt-get install -y \
                libreoffice firefox-esr evolution evolution-ews'

# VMware Horizon
# Download VMware Horizon deb file
qvm-run --auto --user root --pass-io --no-gui my-untrusted \
        "cat /home/user/Downloads/VMware-Horizon-Client*.deb" \
        |  qvm-run --auto --user root --pass-io --no-gui $worktemplatevm \
                "cat - > /home/user/VMware-Horizon-Client.deb"
qvm-run --auto --user root --pass-io --no-gui $worktemplatevm \
        "apt-get install /home/user/VMware-Horizon-Client.deb"
qvm-run --auto --user root --pass-io --no-gui $worktemplatevm \
        "rm /home/user/VMware-Horizon-Client.deb"

# WebEx
qvm-run --auto --user root --pass-io --no-gui my-untrusted \
        "cat /home/user/Downloads/Webex.deb" \
        |  qvm-run --auto --user root --pass-io --no-gui $worktemplatevm \
                "cat - > /home/user/Webex.deb"
qvm-run --auto --user root --pass-io --no-gui $worktemplatevm \
        "apt-get install /home/user/Webex.deb"
qvm-run --auto --user root --pass-io --no-gui $worktemplatevm \
        "rm /home/user/Webex.deb"


=====

# FreeOffice
qvm-run --auto --user root --pass-io --no-gui $worktemplatevm 'mkdir -p /etc/apt/keyrings'
qvm-run --auto --user root --pass-io --no-gui sys-net \
        'wget -qO- https://shop.softmaker.com/repo/linux-repo-public.key' \
        | qvm-run --auto --user root --pass-io --no-gui $worktemplatevm \
                'gpg --dearmor > /etc/apt/keyrings/softmaker.gpg'



-------
Unable to find in debian-12:
pinentry-gtk libffi libpng12 libXScrnSaver libsigc++20 iputils
qubes-core-agent-systemd iproute qubes-core-agent-qrexec


#old
                zypper \
                pulseaudio-qubes \
                gstreamer \
                gstreamer-plugins-base \
                pangox-compat \

# Slack
# Download: https://slack.com/downloads/instructions/fedora
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
        'dnf -y install libappindicator-gtk3'
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
        'rpm -i /home/user/QubesIncoming/*/slack*'

# Teams
qvm-prefs $worktemplatevm  netvm sys-firewall
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
        'rpm --import https://packages.microsoft.com/keys/microsoft.asc'
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
        'rpm -i /home/user/QubesIncoming/*/teams*'

# Zoom
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
        'dnf install ibus ibus-m17n libxkbcommon-x11 mesa-dri-drivers'
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
        'rpm -i /home/user/QubesIncoming/*/zoom*'

# WebEx
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
        'dnf install lshw upower'
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
        'rpm -i /home/user/QubesIncoming/*/Webex*'

# Horizon View
qvm-run --pass-io --no-gui --user root $worktemplatevm \
        'chmod +x /home/user/QubesIncoming/*/VMware* && \
        /home/user/QubesIncoming/*/VMware*'
# Install Real-Time Audio-Video

### AnyConnect VPN - OpenConnect
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
        'dnf -y install \
                NetworkManager-openconnect \
                network-manager-applet \
                qubes-core-agent-network-manager \
                NetworkManager-openconnect-gnome \
                NetworkManager-vpnc-gnome \
                NetworkManager-openvpn-gnome \
                NetworkManager-openvpn'

# See also: https://gitlab.com/openconnect/openconnect/-/issues/326
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
        'update-crypto-policies --set DEFAULT:FEDORA32 && \
         rpm -qa | grep crypto-poli'


qvm-shutdown --wait $worktemplatevm

# VMware Horizon View
# Download Horizon Client in an AppVM and transfer it to the work template
# https://my.vmware.com/web/vmware/details?downloadGroup=CART19FQ4_LIN64_410&productId=578
qvm-run --auto --pass-io $DownloadAppVM 'cat Downloads/VMware*.bundle' | \
  qvm-run --pass-io $worktemplatevm 'cat > /home/user/horizon-client.bundle'

qvm-run --pass-io --no-gui --user root $worktemplatevm \
   'chmod +x /home/user/horizon-client.bundle && \
   /home/user/horizon-client.bundle'

# Update AppMenus  in dom0:
qvm-sync-appmenus $worktemplatevm

### Create AppVM
qvm-shutdown --wait $worktemplatevm
qvm-create --template=$worktemplatevm --label=blue $WorkAppVM

# Add network-manager to Qubes Settings > Services
qvm-service --enable $WorkAppVM network-manager

# Add Openconnect VPN
# Network Manager Icon > VPN Connections > Configure VPN
# Add > Cisco AnyConnect Compatible VPN (openconnect)
```

Import a Root CA Certificate
----------------------------
This is how you can add your own Root CA to be able to verify certificates.
The certificate has to be installed in the template!

```
netvm=sys-net
worktemplatevm=t_fedora-37-work_v1

#The easiest way is to give your template VM a short connection to the internet.
qvm-prefs $worktemplatevm netvm $netvm

qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
   'servername=EXAMPLE.COM && \
    caname=COMPANY-CA && \
    echo -n | openssl s_client -connect $servername:443 -showcerts > $caname.crt'
```
edit this file to only leave the (last=) CA part of the certficiate including the --BEGIN and --END.
```
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm "xterm"
```
Convert it from CRT to PEM and move it to the credentials store and finally update CA trust store:
```
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
    "openssl x509 -in $caname.crt -out $caname.pem -outform PEM"
qvm-run --auto --pass-io --no-gui --user root $worktemplatevm \
   "mkdir -p etc/pki/ca-trust/source/anchors && \
    mv $caname.pem /etc/pki/ca-trust/source/anchors && \
    update-ca-trust"
```
Remove NetVM from template and shutdown template
```
qvm-prefs $worktemplatevm netvm ''
qvm-shutdown --wait $worktemplatevm
